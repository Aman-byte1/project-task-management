services:
  # PostgreSQL database service
  postgres:
    image: postgres:15-alpine
    container_name: project-task-postgres
    environment:
      POSTGRES_DB: project_task_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: project-task-backend
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: project_task_db
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your_super_secret_jwt_key_change_this_in_production
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - app-network
    depends_on:
      - postgres
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: project-task-frontend
    ports:
      - "80:80"
    networks:
      - app-network
    restart: unless-stopped



volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
